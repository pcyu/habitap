"use strict";!function(e){var a={baseUrl:"http://localhost:3008",init:function(){},habitDashboard:function(){e(document).on("click","#t-habit-entry",function(){a.loadPage("habit-form"),e("#t-burger").prop("checked",!1)})},getUserPage:function(){e(document).on("submit","#get-protected",function(o){o.preventDefault();var n="Bearer "+localStorage.getItem("jwToken");return new Promise(function(o,t){e.ajax({headers:{accept:"application/json; odata=verbose",Authorization:n},type:"GET",url:a.baseUrl+"/protected",success:function(e){console.log(e),o()},error:function(e){console.log(e),t()}})})})},loadPage:function(a){var o=e("#root"),n="src/views/"+a+".html";e.get(n,function(a){e(o).html(a)})},loadProfile:function(o){var n="Bearer "+localStorage.getItem("jwToken");e.ajax({headers:{accept:"application/json; odata=verbose",Authorization:n},type:"GET",url:a.baseUrl+"/users/"+o,success:function(o){window.location.href=a.baseUrl+"/users/profile",e("#welcome").html("<span class='red'>Hello <b>Again</b></span>")},error:function(e){console.log(e)}})},loginExec:function(){e(document).on("submit","#login-submit",function(e){e.preventDefault(),a.loginHandler()})},loginHandler:function(){var o={username:e("#login-username").val(),password:e("#login-password").val()};e.ajax({contentType:"application/json; charset=utf-8",data:JSON.stringify(o),headers:{accept:"application/json; odata=verbose"},type:"POST",url:"http://localhost:3008/auth/login",success:function(n){a.profile.name=n.profile.firstName+" "+n.profile.lastName,e("#login-username").val(""),e("#login-password").val(""),localStorage.setItem("jwToken",n.profile.token),a.loadProfile(o.username)},error:function(a){console.log(a),e("#t-modal-login").removeClass("active"),e("#t-modal-message").empty(),e("#t-modal-message").addClass("active"),e("#t-modal-message").append('\n                <div id="t-modal-login-fail">Your login attempt has failed, please try again.</div>\n                <a id="t-modal-login-button">Login</a>\n                ')}})},loginModal:function(){e(document).on("click","#t-login",function(a){a.preventDefault(),e(".y-modal.signup").hasClass("active")?(e(".y-modal.signup").removeClass("active"),e(".y-modal.login").addClass("active")):e(".y-modal.login").toggleClass("active"),e("#t-burger").prop("checked",!1)})},logoutHandler:function(){e(document).on("click","#t-logout",function(e){e.preventDefault(),localStorage.removeItem("jwToken"),console.log("You are now logged out."),a.profile.name="",location.reload(!0)})},profile:{name:""},signUpHandler:function(){e(document).on("click","#t-sign-up",function(){e(".y-modal.login").hasClass("active")?(e(".y-modal.login").removeClass("active"),e(".y-modal.signup").addClass("active")):e(".y-modal.signup").toggleClass("active"),e("#t-burger").prop("checked",!1)}),e(document).on("submit","#sign-up-submit",function(o){o.preventDefault();var n={firstName:e("#firstName").val(),lastName:e("#lastName").val(),password:e("#password").val(),username:e("#username").val()};return new Promise(function(o,t){e.ajax({contentType:"application/json; charset=utf-8",data:JSON.stringify(n),headers:{accept:"application/json; odata=verbose"},type:"POST",url:a.baseUrl+"/users/register",success:function(a){console.log("Thank you "+n.firstName+" "+n.lastName+"! Your account has been created."),e("#firstName").val(""),e("#lastName").val(""),e("#username").val(""),e("#password").val(""),e("#t-modal-sign-up").removeClass("active"),e("#t-modal-message").empty(),e("#t-modal-message").addClass("active"),e("#t-modal-message").append('\n                  <div id="t-modal-sign-up-success">Thank you '+n.firstName+" "+n.lastName+'! Your account has been created.</div>\n                  <a id="t-modal-login-button">Login</a>\n                  '),o()},error:function(a){console.log(a),e("#t-modal-sign-up").removeClass("active"),e("#t-modal-message").empty(),e("#t-modal-message").addClass("active"),e("#t-modal-message").append('\n                  <div id="t-modal-sign-up-fail">'+n.firstName+" "+n.lastName+', Either your password needs to be ten characters long, or your username has already been selected.</div>\n                  <a id="t-modal-sign-up-button">Sign-up</a>\n                  '),t()}})})})}};e(window).on("load",function(){a.init()})}(window.jQuery),function(e){var a={box:function(){e("body").append('\n        <div class="viewport">\n          <span id="t-width"></span> x <span id="t-height"></span>\n        </div>\n      ')},calculateDimensions:function(){var a=window.innerWidth,o=window.innerHeight;e("#t-width").html(a),e("#t-height").html(o)},init:function(){a.box(),a.sizer()},sizer:function(){a.calculateDimensions(),a.toggleBox()},toggleBox:function(){e(".viewport").click(function(){e(this).toggleClass("inactive")})}};e(window).on("load",function(){a.init()}),e(window).on("resize",function(){a.sizer()})}(window.jQuery);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
