"use strict";!function(i){var n={box:function(){i("head").append('<style>.viewport{background:rgba(0,0,0,0.7);bottom:0;color:white;cursor:pointer;font-size:10px;font-family:"LucidaGrande","Helvetica",sans-serif;line-height:14px;padding-bottom:4px;padding-left:6px;padding-right:6px;padding-top:4px;position:fixed;right:0;z-index:999}.viewport.inactive{opacity:0}#responsive-width,#responsive-height{display:inline-block}</style>'),i("body").append('<div class="viewport"><div id="responsive-width"></div> x <div id="responsive-height"></div></div>')},calculateDimensions:function(){var n=window.innerWidth,t=window.innerHeight;i("#responsive-width").html(n),i("#responsive-height").html(t)},init:function(){n.box(),n.mobileToggle(),n.sizer()},mobileToggle:function(){i(document).on("click","#t-mobileicon",function(){i("html").toggleClass("disable"),i(this).toggleClass("active"),i("#t-navitems").toggleClass("active"),i("#t-overlay").toggleClass("active")})},sizer:function(){n.calculateDimensions(),n.toggleBox()},testAlert:function(){alert("JS is hooked up correctly.")},toggleBox:function(){i(".viewport").click(function(){i(this).toggleClass("inactive")})}};i(window).on("load",function(){n.init()}),i(window).on("resize",function(){n.sizer()})}(window.jQuery),function(i){var n={box:function(){i("body").append('\n        <div class="viewport">\n          <span id="t-width"></span> x <span id="t-height"></span>\n        </div>\n      ')},calculateDimensions:function(){var n=window.innerWidth,t=window.innerHeight;i("#t-width").html(n),i("#t-height").html(t)},init:function(){n.box(),n.sizer()},sizer:function(){n.calculateDimensions(),n.toggleBox()},toggleBox:function(){i(".viewport").click(function(){i(this).toggleClass("inactive")})}};i(window).on("load",function(){n.init()}),i(window).on("resize",function(){n.sizer()})}(window.jQuery);
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1haW4uanMiLCJzaXplci5qcyJdLCJuYW1lcyI6WyIkIiwiYXBwIiwiYm94IiwiYXBwZW5kIiwiY2FsY3VsYXRlRGltZW5zaW9ucyIsInZpZXdwb3J0V2lkdGgiLCJ3aW5kb3ciLCJpbm5lcldpZHRoIiwidmlld3BvcnRIZWlnaHQiLCJpbm5lckhlaWdodCIsImh0bWwiLCJpbml0IiwibW9iaWxlVG9nZ2xlIiwic2l6ZXIiLCJkb2N1bWVudCIsIm9uIiwidG9nZ2xlQ2xhc3MiLCJ0aGlzIiwidG9nZ2xlQm94IiwidGVzdEFsZXJ0IiwiYWxlcnQiLCJjbGljayIsImpRdWVyeSIsInciLCJoIl0sIm1hcHBpbmdzIjoiQUFBQSxjQUVBLFNBQUFBLEdBRUEsSUFBQUMsR0FDQUMsSUFBQSxXQUNBRixFQUFBLFFBQUFHLE9BQUEsOFdBQ0FILEVBQUEsUUFBQUcsT0FBQSx1R0FFQUMsb0JBQUEsV0FDQSxJQUFBQyxFQUFBQyxPQUFBQyxXQUNBQyxFQUFBRixPQUFBRyxZQUNBVCxFQUFBLHFCQUFBVSxLQUFBTCxHQUNBTCxFQUFBLHNCQUFBVSxLQUFBRixJQUVBRyxLQUFBLFdBRUFWLEVBQUFDLE1BQ0FELEVBQUFXLGVBQ0FYLEVBQUFZLFNBRUFELGFBQUEsV0FFQVosRUFBQWMsVUFBQUMsR0FBQSxRQUFBLGdCQUFBLFdBQ0FmLEVBQUEsUUFBQWdCLFlBQUEsV0FDQWhCLEVBQUFpQixNQUFBRCxZQUFBLFVBQ0FoQixFQUFBLGVBQUFnQixZQUFBLFVBQ0FoQixFQUFBLGNBQUFnQixZQUFBLGFBR0FILE1BQUEsV0FDQVosRUFBQUcsc0JBQ0FILEVBQUFpQixhQUVBQyxVQUFBLFdBQ0FDLE1BQUEsK0JBRUFGLFVBQUEsV0FDQWxCLEVBQUEsYUFBQXFCLE1BQUEsV0FDQXJCLEVBQUFpQixNQUFBRCxZQUFBLGdCQUtBaEIsRUFBQU0sUUFBQVMsR0FBQSxPQUFBLFdBQ0FkLEVBQUFVLFNBR0FYLEVBQUFNLFFBQUFTLEdBQUEsU0FBQSxXQUNBZCxFQUFBWSxVQS9DQSxDQWlEQVAsT0FBQWdCLFFDakRBLFNBQUF0QixHQUVBLElBQUFDLEdBQ0FDLElBQUEsV0FDQUYsRUFBQSxRQUFBRyxPQUFBLGlJQUVBQyxvQkFBQSxXQUNBLElBQUFtQixFQUFBakIsT0FBQUMsV0FDQWlCLEVBQUFsQixPQUFBRyxZQUNBVCxFQUFBLFlBQUFVLEtBQUFhLEdBQ0F2QixFQUFBLGFBQUFVLEtBQUFjLElBRUFiLEtBQUEsV0FDQVYsRUFBQUMsTUFDQUQsRUFBQVksU0FFQUEsTUFBQSxXQUNBWixFQUFBRyxzQkFDQUgsRUFBQWlCLGFBRUFBLFVBQUEsV0FDQWxCLEVBQUEsYUFBQXFCLE1BQUEsV0FDQXJCLEVBQUFpQixNQUFBRCxZQUFBLGdCQUtBaEIsRUFBQU0sUUFBQVMsR0FBQSxPQUFBLFdBQ0FkLEVBQUFVLFNBR0FYLEVBQUFNLFFBQUFTLEdBQUEsU0FBQSxXQUNBZCxFQUFBWSxVQWhDQSxDQWtDQVAsT0FBQWdCIiwiZmlsZSI6ImFwcC5taW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbihmdW5jdGlvbiAoJCkge1xuXG4gIHZhciBhcHAgPSB7XG4gICAgYm94OiBmdW5jdGlvbiBib3goKSB7XG4gICAgICAkKCdoZWFkJykuYXBwZW5kKCc8c3R5bGU+LnZpZXdwb3J0e2JhY2tncm91bmQ6cmdiYSgwLDAsMCwwLjcpO2JvdHRvbTowO2NvbG9yOndoaXRlO2N1cnNvcjpwb2ludGVyO2ZvbnQtc2l6ZToxMHB4O2ZvbnQtZmFtaWx5OlwiTHVjaWRhR3JhbmRlXCIsXCJIZWx2ZXRpY2FcIixzYW5zLXNlcmlmO2xpbmUtaGVpZ2h0OjE0cHg7cGFkZGluZy1ib3R0b206NHB4O3BhZGRpbmctbGVmdDo2cHg7cGFkZGluZy1yaWdodDo2cHg7cGFkZGluZy10b3A6NHB4O3Bvc2l0aW9uOmZpeGVkO3JpZ2h0OjA7ei1pbmRleDo5OTl9LnZpZXdwb3J0LmluYWN0aXZle29wYWNpdHk6MH0jcmVzcG9uc2l2ZS13aWR0aCwjcmVzcG9uc2l2ZS1oZWlnaHR7ZGlzcGxheTppbmxpbmUtYmxvY2t9PC9zdHlsZT4nKTtcbiAgICAgICQoJ2JvZHknKS5hcHBlbmQoJzxkaXYgY2xhc3M9XCJ2aWV3cG9ydFwiPjxkaXYgaWQ9XCJyZXNwb25zaXZlLXdpZHRoXCI+PC9kaXY+IHggPGRpdiBpZD1cInJlc3BvbnNpdmUtaGVpZ2h0XCI+PC9kaXY+PC9kaXY+Jyk7XG4gICAgfSxcbiAgICBjYWxjdWxhdGVEaW1lbnNpb25zOiBmdW5jdGlvbiBjYWxjdWxhdGVEaW1lbnNpb25zKCkge1xuICAgICAgdmFyIHZpZXdwb3J0V2lkdGggPSB3aW5kb3cuaW5uZXJXaWR0aDtcbiAgICAgIHZhciB2aWV3cG9ydEhlaWdodCA9IHdpbmRvdy5pbm5lckhlaWdodDtcbiAgICAgICQoXCIjcmVzcG9uc2l2ZS13aWR0aFwiKS5odG1sKHZpZXdwb3J0V2lkdGgpO1xuICAgICAgJChcIiNyZXNwb25zaXZlLWhlaWdodFwiKS5odG1sKHZpZXdwb3J0SGVpZ2h0KTtcbiAgICB9LFxuICAgIGluaXQ6IGZ1bmN0aW9uIGluaXQoKSB7XG4gICAgICAvL2FwcC50ZXN0QWxlcnQoKTsgIC8vYzAwMlxuICAgICAgYXBwLmJveCgpO1xuICAgICAgYXBwLm1vYmlsZVRvZ2dsZSgpO1xuICAgICAgYXBwLnNpemVyKCk7IC8vYzAwN1xuICAgIH0sXG4gICAgbW9iaWxlVG9nZ2xlOiBmdW5jdGlvbiBtb2JpbGVUb2dnbGUoKSB7XG4gICAgICAvL2MwMDlcbiAgICAgICQoZG9jdW1lbnQpLm9uKCdjbGljaycsICcjdC1tb2JpbGVpY29uJywgZnVuY3Rpb24gKCkge1xuICAgICAgICAkKCdodG1sJykudG9nZ2xlQ2xhc3MoJ2Rpc2FibGUnKTtcbiAgICAgICAgJCh0aGlzKS50b2dnbGVDbGFzcygnYWN0aXZlJyk7XG4gICAgICAgICQoJyN0LW5hdml0ZW1zJykudG9nZ2xlQ2xhc3MoJ2FjdGl2ZScpO1xuICAgICAgICAkKCcjdC1vdmVybGF5JykudG9nZ2xlQ2xhc3MoJ2FjdGl2ZScpO1xuICAgICAgfSk7XG4gICAgfSxcbiAgICBzaXplcjogZnVuY3Rpb24gc2l6ZXIoKSB7XG4gICAgICBhcHAuY2FsY3VsYXRlRGltZW5zaW9ucygpO1xuICAgICAgYXBwLnRvZ2dsZUJveCgpO1xuICAgIH0sXG4gICAgdGVzdEFsZXJ0OiBmdW5jdGlvbiB0ZXN0QWxlcnQoKSB7XG4gICAgICBhbGVydCgnSlMgaXMgaG9va2VkIHVwIGNvcnJlY3RseS4nKTtcbiAgICB9LFxuICAgIHRvZ2dsZUJveDogZnVuY3Rpb24gdG9nZ2xlQm94KCkge1xuICAgICAgJCgnLnZpZXdwb3J0JykuY2xpY2soZnVuY3Rpb24gKCkge1xuICAgICAgICAkKHRoaXMpLnRvZ2dsZUNsYXNzKCdpbmFjdGl2ZScpO1xuICAgICAgfSk7XG4gICAgfVxuICB9O1xuXG4gICQod2luZG93KS5vbignbG9hZCcsIGZ1bmN0aW9uICgpIHtcbiAgICBhcHAuaW5pdCgpO1xuICB9KTtcblxuICAkKHdpbmRvdykub24oJ3Jlc2l6ZScsIGZ1bmN0aW9uICgpIHtcbiAgICBhcHAuc2l6ZXIoKTsgLy9jMDA3XG4gIH0pO1xufSkod2luZG93LmpRdWVyeSk7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbihmdW5jdGlvbiAoJCkge1xuXG4gIHZhciBhcHAgPSB7XG4gICAgYm94OiBmdW5jdGlvbiBib3goKSB7XG4gICAgICAkKCdib2R5JykuYXBwZW5kKFwiXFxuICAgICAgICA8ZGl2IGNsYXNzPVxcXCJ2aWV3cG9ydFxcXCI+XFxuICAgICAgICAgIDxzcGFuIGlkPVxcXCJ0LXdpZHRoXFxcIj48L3NwYW4+IHggPHNwYW4gaWQ9XFxcInQtaGVpZ2h0XFxcIj48L3NwYW4+XFxuICAgICAgICA8L2Rpdj5cXG4gICAgICBcIik7XG4gICAgfSxcbiAgICBjYWxjdWxhdGVEaW1lbnNpb25zOiBmdW5jdGlvbiBjYWxjdWxhdGVEaW1lbnNpb25zKCkge1xuICAgICAgdmFyIHcgPSB3aW5kb3cuaW5uZXJXaWR0aDtcbiAgICAgIHZhciBoID0gd2luZG93LmlubmVySGVpZ2h0O1xuICAgICAgJChcIiN0LXdpZHRoXCIpLmh0bWwodyk7XG4gICAgICAkKFwiI3QtaGVpZ2h0XCIpLmh0bWwoaCk7XG4gICAgfSxcbiAgICBpbml0OiBmdW5jdGlvbiBpbml0KCkge1xuICAgICAgYXBwLmJveCgpO1xuICAgICAgYXBwLnNpemVyKCk7XG4gICAgfSxcbiAgICBzaXplcjogZnVuY3Rpb24gc2l6ZXIoKSB7XG4gICAgICBhcHAuY2FsY3VsYXRlRGltZW5zaW9ucygpO1xuICAgICAgYXBwLnRvZ2dsZUJveCgpO1xuICAgIH0sXG4gICAgdG9nZ2xlQm94OiBmdW5jdGlvbiB0b2dnbGVCb3goKSB7XG4gICAgICAkKCcudmlld3BvcnQnKS5jbGljayhmdW5jdGlvbiAoKSB7XG4gICAgICAgICQodGhpcykudG9nZ2xlQ2xhc3MoJ2luYWN0aXZlJyk7XG4gICAgICB9KTtcbiAgICB9XG4gIH07XG5cbiAgJCh3aW5kb3cpLm9uKCdsb2FkJywgZnVuY3Rpb24gKCkge1xuICAgIGFwcC5pbml0KCk7IC8vYzAyOFxuICB9KTtcblxuICAkKHdpbmRvdykub24oJ3Jlc2l6ZScsIGZ1bmN0aW9uICgpIHtcbiAgICBhcHAuc2l6ZXIoKTsgLy9jMDI4XG4gIH0pO1xufSkod2luZG93LmpRdWVyeSk7Il19
