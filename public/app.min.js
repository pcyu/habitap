"use strict";!function(n){var o={baseUrl:"http://localhost:3008",name:"",init:function(){o.doLogin(),o.getProtected(),o.logoutHandler(),o.signUpHandler()},doLogin:function(){n(document).on("click","#t-login",function(){n("#t-modal").addClass("active")}),n(document).on("submit","#login-submit",function(n){n.preventDefault(),o.loginHandler().then(o.loadEndpoint)})},getProtected:function(){n(document).on("submit","#get-protected",function(e){e.preventDefault();var t="Bearer "+localStorage.getItem("jwToken");return new Promise(function(e,a){n.ajax({headers:{accept:"application/json; odata=verbose",Authorization:t},type:"GET",url:o.baseUrl+"/protected",success:function(n){console.log(n),e()},error:function(n){console.log(n),a()}})})})},loadEndpoint:function(){var e="Bearer "+localStorage.getItem("jwToken");return new Promise(function(t,a){n.ajax({headers:{accept:"application/json; odata=verbose",Authorization:e},type:"GET",url:o.baseUrl+"/protected",success:function(n){o.loadPage("protected"),t()},error:function(n){console.log(n),a()}})})},loginHandler:function(){var e={username:n("#login-username").val(),password:n("#login-password").val()};return new Promise(function(t,a){n.ajax({contentType:"application/json; charset=utf-8",data:JSON.stringify(e),headers:{accept:"application/json; odata=verbose"},type:"POST",url:"http://localhost:3008/auth/login",success:function(e){o.name=e.profile.firstName+" "+e.profile.lastName,n("#login-username").val(""),n("#login-password").val(""),localStorage.setItem("jwToken",e.profile.token),console.log("Welcome "+o.name+"! You are now logged in."),t()},error:function(n){console.log(n),a()}})})},logoutHandler:function(){n(document).on("submit","#do-logout",function(n){n.preventDefault(),localStorage.removeItem("jwToken"),console.log("You are now logged out."),o.name="",location.reload(!0)})},signUpHandler:function(){n(document).on("submit","#sign-up-submit",function(e){e.preventDefault();var t={firstName:n("#firstName").val(),lastName:n("#lastName").val(),password:n("#password").val(),username:n("#username").val()};return new Promise(function(e,a){n.ajax({contentType:"application/json; charset=utf-8",data:JSON.stringify(t),headers:{accept:"application/json; odata=verbose"},type:"POST",url:o.baseUrl+"/users/register",success:function(o){console.log("Thank you "+t.firstName+" "+t.lastName+"! Your account has been created."),n("#firstName").val(""),n("#lastName").val(""),n("#username").val(""),n("#password").val(""),e()},error:function(n){console.log(n),a()}})})})},loadPage:function(o){var e=n("#root"),t="src/templates/"+o+".html";n.get(t,function(o){n(e).html(o)})}};n(window).on("load",function(){o.init(),o.loadPage("landing")}),n(window).on("resize",function(){o.sizer()})}(window.jQuery),function(n){var o={box:function(){n("body").append('\n        <div class="viewport">\n          <span id="t-width"></span> x <span id="t-height"></span>\n        </div>\n      ')},calculateDimensions:function(){var o=window.innerWidth,e=window.innerHeight;n("#t-width").html(o),n("#t-height").html(e)},init:function(){o.box(),o.sizer()},sizer:function(){o.calculateDimensions(),o.toggleBox()},toggleBox:function(){n(".viewport").click(function(){n(this).toggleClass("inactive")})}};n(window).on("load",function(){o.init()}),n(window).on("resize",function(){o.sizer()})}(window.jQuery);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
