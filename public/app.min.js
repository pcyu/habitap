"use strict";!function(o){var n={baseUrl:"http://localhost:3008",name:"",init:function(){n.doLogin(),n.getProtected(),n.logoutHandler(),n.signUpHandler()},doLogin:function(){o(document).on("click","#t-login",function(){o("#t-modal-sign-up").removeClass("active"),o("#t-modal-login").addClass("active")}),o(document).on("submit","#login-submit",function(o){o.preventDefault(),n.loginHandler().then(n.loadEndpoint)})},getProtected:function(){o(document).on("submit","#get-protected",function(e){e.preventDefault();var t="Bearer "+localStorage.getItem("jwToken");return new Promise(function(e,a){o.ajax({headers:{accept:"application/json; odata=verbose",Authorization:t},type:"GET",url:n.baseUrl+"/protected",success:function(o){console.log(o),e()},error:function(o){console.log(o),a()}})})})},loadEndpoint:function(){var e="Bearer "+localStorage.getItem("jwToken");return new Promise(function(t,a){o.ajax({headers:{accept:"application/json; odata=verbose",Authorization:e},type:"GET",url:n.baseUrl+"/protected",success:function(o){n.loadPage("protected"),t()},error:function(o){console.log(o),a()}})})},loginHandler:function(){var e={username:o("#login-username").val(),password:o("#login-password").val()};return new Promise(function(t,a){o.ajax({contentType:"application/json; charset=utf-8",data:JSON.stringify(e),headers:{accept:"application/json; odata=verbose"},type:"POST",url:"http://localhost:3008/auth/login",success:function(e){n.name=e.profile.firstName+" "+e.profile.lastName,o("#login-username").val(""),o("#login-password").val(""),localStorage.setItem("jwToken",e.profile.token),console.log("Welcome "+n.name+"! You are now logged in."),t()},error:function(o){console.log(o),a()}})})},logoutHandler:function(){o(document).on("submit","#do-logout",function(o){o.preventDefault(),localStorage.removeItem("jwToken"),console.log("You are now logged out."),n.name="",location.reload(!0)})},signUpHandler:function(){o(document).on("click","#t-sign-up",function(){o("#t-modal-login").removeClass("active"),o("#t-modal-sign-up").addClass("active")}),o(document).on("submit","#sign-up-submit",function(e){e.preventDefault();var t={firstName:o("#firstName").val(),lastName:o("#lastName").val(),password:o("#password").val(),username:o("#username").val()};return new Promise(function(e,a){o.ajax({contentType:"application/json; charset=utf-8",data:JSON.stringify(t),headers:{accept:"application/json; odata=verbose"},type:"POST",url:n.baseUrl+"/users/register",success:function(n){console.log("Thank you "+t.firstName+" "+t.lastName+"! Your account has been created."),o("#firstName").val(""),o("#lastName").val(""),o("#username").val(""),o("#password").val(""),e()},error:function(o){console.log(o),a()}})})})},loadPage:function(n){var e=o("#root"),t="src/templates/"+n+".html";o.get(t,function(n){o(e).html(n)})}};o(window).on("load",function(){n.init(),n.loadPage("landing")}),o(window).on("resize",function(){n.sizer()})}(window.jQuery),function(o){var n={box:function(){o("body").append('\n        <div class="viewport">\n          <span id="t-width"></span> x <span id="t-height"></span>\n        </div>\n      ')},calculateDimensions:function(){var n=window.innerWidth,e=window.innerHeight;o("#t-width").html(n),o("#t-height").html(e)},init:function(){n.box(),n.sizer()},sizer:function(){n.calculateDimensions(),n.toggleBox()},toggleBox:function(){o(".viewport").click(function(){o(this).toggleClass("inactive")})}};o(window).on("load",function(){n.init()}),o(window).on("resize",function(){n.sizer()})}(window.jQuery);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
