"use strict";!function(e){var o={baseUrl:"http://localhost:3008",name:"",init:function(){o.doLogin(),o.habitDashboard(),o.getUserPage(),o.logoutHandler(),o.signUpHandler()},doLogin:function(){e(document).on("click","#t-login",function(){e("#t-modal-message").removeClass("active"),e("#t-modal-sign-up").removeClass("active"),e("#t-modal-login").toggleClass("active"),e("#t-burger").prop("checked",!1)}),e(document).on("click","#t-modal-login-button",function(){e("#t-modal-message").removeClass("active"),e("#t-modal-login").toggleClass("active"),e("#t-burger").prop("checked",!1)}),e(document).on("click","#t-modal-sign-up-button",function(){e("#t-modal-message").removeClass("active"),e("#t-modal-sign-up").toggleClass("active"),e("#t-burger").prop("checked",!1)}),e(document).on("submit","#login-submit",function(e){e.preventDefault(),o.loginHandler().then(o.loadEndpoint)})},habitDashboard:function(){e(document).on("click","#t-habit-entry",function(){o.loadPage("habit-form"),e("#t-burger").prop("checked",!1)})},getUserPage:function(){e(document).on("submit","#get-protected",function(a){a.preventDefault();var t="Bearer "+localStorage.getItem("jwToken");return new Promise(function(a,n){e.ajax({headers:{accept:"application/json; odata=verbose",Authorization:t},type:"GET",url:o.baseUrl+"/protected",success:function(e){console.log(e),a()},error:function(e){console.log(e),n()}})})})},loadEndpoint:function(){var a="Bearer "+localStorage.getItem("jwToken");return new Promise(function(t,n){e.ajax({headers:{accept:"application/json; odata=verbose",Authorization:a},type:"GET",url:o.baseUrl+"/habit",success:function(e){o.loadPage("habit"),t()},error:function(e){console.log(e),n()}})})},loginHandler:function(){var a={username:e("#login-username").val(),password:e("#login-password").val()};return new Promise(function(t,n){e.ajax({contentType:"application/json; charset=utf-8",data:JSON.stringify(a),headers:{accept:"application/json; odata=verbose"},type:"POST",url:"http://localhost:3008/auth/login",success:function(a){o.name=a.profile.firstName+" "+a.profile.lastName,e("#login-username").val(""),e("#login-password").val(""),localStorage.setItem("jwToken",a.profile.token),console.log("Welcome "+o.name+"! You are now logged in."),t()},error:function(o){console.log(o),e("#t-modal-login").removeClass("active"),e("#t-modal-message").empty(),e("#t-modal-message").addClass("active"),e("#t-modal-message").append('\n                <div id="t-modal-login-fail">Your login attempt has failed, please try again.</div>\n                <a id="t-modal-login-button">Login</a>\n                '),n()}})})},logoutHandler:function(){e(document).on("click","#t-logout",function(e){e.preventDefault(),localStorage.removeItem("jwToken"),console.log("You are now logged out."),o.name="",location.reload(!0)})},signUpHandler:function(){e(document).on("click","#t-sign-up",function(){e("#t-modal-message").removeClass("active"),e("#t-modal-login").removeClass("active"),e("#t-modal-sign-up").toggleClass("active"),e("#t-burger").prop("checked",!1)}),e(document).on("submit","#sign-up-submit",function(a){a.preventDefault();var t={firstName:e("#firstName").val(),lastName:e("#lastName").val(),password:e("#password").val(),username:e("#username").val()};return new Promise(function(a,n){e.ajax({contentType:"application/json; charset=utf-8",data:JSON.stringify(t),headers:{accept:"application/json; odata=verbose"},type:"POST",url:o.baseUrl+"/users/register",success:function(o){console.log("Thank you "+t.firstName+" "+t.lastName+"! Your account has been created."),e("#firstName").val(""),e("#lastName").val(""),e("#username").val(""),e("#password").val(""),e("#t-modal-sign-up").removeClass("active"),e("#t-modal-message").empty(),e("#t-modal-message").addClass("active"),e("#t-modal-message").append('\n                  <div id="t-modal-sign-up-success">Thank you '+t.firstName+" "+t.lastName+'! Your account has been created.</div>\n                  <a id="t-modal-login-button">Login</a>\n                  '),a()},error:function(o){console.log(o),e("#t-modal-sign-up").removeClass("active"),e("#t-modal-message").empty(),e("#t-modal-message").addClass("active"),e("#t-modal-message").append('\n                  <div id="t-modal-sign-up-fail">'+t.firstName+" "+t.lastName+', Either your password needs to be ten characters long, or your username has already been selected.</div>\n                  <a id="t-modal-sign-up-button">Sign-up</a>\n                  '),n()}})})})},loadPage:function(o){var a=e("#root"),t="src/templates/"+o+".html";e.get(t,function(o){e(a).html(o)})}};e(window).on("load",function(){o.init(),o.loadPage("landing")}),e(window).on("resize",function(){o.sizer()})}(window.jQuery),function(e){var o={box:function(){e("body").append('\n        <div class="viewport">\n          <span id="t-width"></span> x <span id="t-height"></span>\n        </div>\n      ')},calculateDimensions:function(){var o=window.innerWidth,a=window.innerHeight;e("#t-width").html(o),e("#t-height").html(a)},init:function(){o.box(),o.sizer()},sizer:function(){o.calculateDimensions(),o.toggleBox()},toggleBox:function(){e(".viewport").click(function(){e(this).toggleClass("inactive")})}};e(window).on("load",function(){o.init()}),e(window).on("resize",function(){o.sizer()})}(window.jQuery);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
